{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/back-test-browse/back-test-browse.component.ts","./src/app/back-test-browse/back-test-browse.component.html","./src/app/back-test-edit/back-test-edit.component.ts","./src/app/back-test-edit/back-test-edit.component.html","./src/app/shared/backTestResponse.ts","./src/app/shared/csvUtil.service.ts","./src/app/shared/rest-api.service.ts","./src/app/shared/stockTradeStrategy.ts","./src/app/trade-strategy-browse/trade-strategy-browse.component.ts","./src/app/trade-strategy-browse/trade-strategy-browse.component.html","./src/app/trade-strategy-edit/trade-strategy-edit.component.ts","./src/app/trade-strategy-edit/trade-strategy-edit.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TradeStrategyEditComponent } from './trade-strategy-edit/trade-strategy-edit.component';\nimport { BackTestEditComponent } from './back-test-edit/back-test-edit.component';\nimport { BackTestBrowseComponent } from './back-test-browse/back-test-browse.component';\nimport { TradeStrategyBrowseComponent } from './trade-strategy-browse/trade-strategy-browse.component';\n\nconst routes: Routes = [\n  { path: '', component: TradeStrategyBrowseComponent },\n  { path: 'trade-strategy-browse', component: TradeStrategyBrowseComponent },\n  { path: 'trade-strategy-edit', component: TradeStrategyEditComponent },\n  { path: 'back-test-edit', component: BackTestEditComponent },\n  { path: 'back-test-browse', component: BackTestBrowseComponent },\n  { path: 'back-test-browse/back-test-edit/:strategyName', component: BackTestEditComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers : []\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'alpca-tradeStrategy-app';\n}\n","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/back-test-browse\">Back Test Browse</a>\n  </nav>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/back-test-edit\">Back Test Edit</a>\n  </nav>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/trade-strategy-browse\">Trade Strategy Browse</a>\n  </nav>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/trade-strategy-edit\">Trade Strategy Edit</a>\n  </nav>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\n// HttpClient module for RESTful API\nimport { HttpClientModule } from '@angular/common/http';\n\n// Routing module for router service\nimport { AppRoutingModule } from './app-routing.module';\n\n// Forms module\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n// Components\nimport { TradeStrategyEditComponent } from './trade-strategy-edit/trade-strategy-edit.component';\nimport { TradeStrategyBrowseComponent } from './trade-strategy-browse/trade-strategy-browse.component';\nimport { BackTestEditComponent } from './back-test-edit/back-test-edit.component';\nimport { BackTestBrowseComponent } from './back-test-browse/back-test-browse.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TradeStrategyEditComponent,\n    TradeStrategyBrowseComponent,\n    BackTestEditComponent,\n    BackTestBrowseComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgxEchartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { BackTestStrategy } from '../shared/backTestStrategy';\n\n\n@Component({\n  selector: 'back-test-browse',\n  templateUrl: './back-test-browse.component.html',\n  styleUrls: ['./back-test-browse.component.css']\n})\nexport class BackTestBrowseComponent implements OnInit {\n\n  backTestStrategies: BackTestStrategy[] = [];\n\n  constructor(public restApi: RestApiService) { }\n\n\n\n  // Get All Back TestStrategy list\n  loadAllBackTestStrategy() {\n    this.restApi.getAllBackTestStrategy().subscribe((data : BackTestStrategy[]) => {\n      this.backTestStrategies = data ;\n    }\n    );\n};\n\n  ngOnInit() :void  {\n    this.loadAllBackTestStrategy();\n  }\n  // Delete Back Test Strategy\n deleteBackTestStrategy(strategyName) {\n    if (window.confirm('Are you sure, you want to delete?')){\n      this.restApi.deleteBackTestStrategy(strategyName).subscribe( data => {\n         this.loadAllBackTestStrategy();\n      });\n\n    }\n  }\n\n}\n","<div class=\"container custom-container-2\">\n\n  <!-- Show it when there is no employee -->\n  <div class=\"no-data text-center\">\n    <p>Click here to backtest more Strategy</p>\n    <button class=\"btn btn-outline-primary\" routerLink=\"/back-test-edit\">Add BackTest Strategy</button>\n  </div>\n\n  <!-- Employees list table, it hides when there is no employee -->\n  <div *ngIf=\"backTestStrategies.length !== 0\">\n    <h3 class=\"mb-3 text-center\">Browse BackTest Strategy</h3>\n\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Strategy Name</th>\n            <th scope=\"col\">Ticker</th>\n            <th scope=\"col\">IntervalDuration</th>\n            <th scope=\"col\">profit Percentage </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let backTestStrategy of backTestStrategies\">\n            <td>{{backTestStrategy.strategyName}}</td>\n            <td>{{backTestStrategy.backTestRequest.ticker}}</td>\n            <td>{{backTestStrategy.backTestRequest.intervalDuration}}</td>\n            <td>{{backTestStrategy.profitPercentage}}</td>\n            <td>\n              <span class=\"edit\" routerLink=\"back-test-edit/{{backTestStrategy.strategyName}}\">Edit</span>\n              <span class=\"delete\" (click)=\"deleteBackTestStrategy(backTestStrategy.strategyName)\">Delete</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {BackTestRequest } from \"../shared/backTestRequest\";\nimport {BackTestResponse } from \"../shared/backTestResponse\";\nimport {BackTestStrategy } from \"../shared/backTestStrategy\";\nimport { EChartOption } from 'echarts';\nimport { CSVUtil } from '../shared/csvUtil.service';\n\n@Component({\n  selector: 'back-test-edit',\n  templateUrl: './back-test-edit.component.html',\n  styleUrls: ['./back-test-edit.component.css']\n})\n\nexport class BackTestEditComponent implements OnInit {\n  strategyName = this.actRoute.snapshot.params['strategyName'];\n  backTestStrategy: any = {\n        \"strategyName\": \"Enter your Back test name here!!\",\n        \"backTestRequest\":{\n        \"strategyName\": \"Enter your Back test name here\",\n        \"ticker\": \"Enter your Stock name here!!\",\n        \"quantity\": 10,\n        \"intervalDuration\": \"ONE_MIN\",\n        \"tradeStrategy\":{\n          \"entryConditions\": \"function(barSeries, stockWatch){ \\n\\tclosePriceIndicator = new ClosePriceIndicator(barSeries);\\n\\tif(closePriceIndicator.getValue(barSeries.getEndIndex()).floatValue() < 568){\\n\\t\\tstockWatch.setStopLossPercentage(10.0);\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n};\",\n          \"entrySignal\": \"buy\",\n          \"exitSignal\": \"sell\",\n          \"exitConditions\": \"function(barSeries, stockWatch){ \\n\\tclosePriceIndicator = new ClosePriceIndicator(barSeries);\\n\\tif(closePriceIndicator.getValue(barSeries.getEndIndex()).floatValue() > 569){\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n};\"\n        },\n        \"stockWatch\":{\n        \"stopLossPercentage\": -10.0,\n        \"profitPercentage\": 0.0,\n        \"targetProfitPercentage\": 15.0\n        },\n        \"candleCount\": 1000\n        },\n        \"profitOrLoss\": 0,\n        \"profitPercentage\": 0\n};\n  backTestResponse : BackTestResponse = new BackTestResponse();\n  profitDataSeries : number[] = [];\n  timeSeriesData : Date[] = [];\n  eChartDataSeries : any [] = [];\n   dynamicData : any = {};\n  intervalDurationOptions : string[] = [\"ONE_MIN\",\"FIVE_MINUTE\",\"FIFTEEN_MINUTE\",\"ONE_DAY\"];\n  loading : boolean = false;\n  errorMessage : string = \"\";\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router,\n    public csvUtil : CSVUtil\n  ) {\n    this.actRoute.params.subscribe( params => {\n      console.log(params);\n      this.strategyName = params[\"strategyName\"];\n       }\n    );\n\n  }\n\n  ngOnInit() {\n    this.getBackTestStrategyWithParam();\n   }\n\n  getBackTestStrategyWithParam() {\n    this.restApi.getBackTestStrategy(this.strategyName).subscribe(data => {\n      this.backTestStrategy = data;\n    })\n  }\n\n\n  getBackTestStrategy() {\n    this.restApi.getBackTestStrategy(this.backTestStrategy.backTestRequest.strategyName).subscribe(data => {\n      this.backTestStrategy = data;\n    })\n  }\n\n  // Update employee data\n  executeBackTestStrategy() {\n    this.loading = true;\n    this.restApi.executeBackTestStrategy(this.backTestStrategy.backTestRequest).subscribe(data => {\n      this.backTestResponse = data;\n      this.backTestStrategy.profitOrLoss = this.backTestResponse.profitOrLoss;\n      this.backTestStrategy.profitPercentage = this.backTestResponse.profitPercentage;\n      this.formDataforChart(this.backTestResponse.trades);\n      this.loading = false;\n    },\n    error =>\n    {\n    this.errorMessage = error;\n    this.loading = false;\n  }\n  )\n  //  this.loading = false;\n  }\n\n  formDataforChart(backTestTrades) {\n    let i = 0;\n    let eChartDataSeries = [];\n    for(let backTestTrade of backTestTrades){\n       let profitAndTime = [];\n       profitAndTime.push(backTestTrade.exitTime);\n       profitAndTime.push(backTestTrade.profitOrLoss);\n       eChartDataSeries.push(profitAndTime);\n    }\n    let data = {\n      data : eChartDataSeries,\n      type : 'bar'\n    };\n    this.dynamicData=this.initialValue;\n    this.dynamicData.series = [];\n    this.dynamicData.series.push(data);\n  }\n\n   downloadCSV() {\n     let headerList = ['entryTime', 'entrySignal', 'priceAtEntry', 'exitTime', 'exitSignal', 'priceAtExit','profitOrLoss'];\n     let fileName = \"ExecutedTradesFor-\"+this.backTestStrategy.backTestRequest.ticker;\n     this.csvUtil.downloadFile(this.backTestResponse.trades,fileName,headerList);\n   }\n\n  initialValue: EChartOption = {\n    xAxis: {\n      type: 'time',\n      splitNumber : 20\n    },\n    yAxis: {\n      type: 'value',\n      name : '$',\n      nameLocation: 'middle'\n    },\n    series: [{\n      data : [],\n      type: 'line'\n    }]\n  }\n\n}\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n\n    <h3 class=\"mb-3 text-center\">Back Test your Strategy </h3>\n\n    <div class=\"form-group\">\n      <label>Stratey Name</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.strategyName\" class=\"form-control\" placeholder=\"StrategyName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Ticker</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.ticker\" class=\"form-control\" placeholder=\"Ticker\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>IntervalDuration</label>\n      <select [(ngModel)]=\"backTestStrategy.backTestRequest.intervalDuration\" class=\"form-control\">\n        <option *ngFor=\"let option of intervalDurationOptions\">\n          {{option}}\n        </option>\n      </select>\n      <!--\n        <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.intervalDuration\" class=\"form-control\" placeholder=\"IntervalDuration\">\n        -->\n\n    </div>\n    <div class=\"form-group\">\n      <label>Quantity</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.quantity\" class=\"form-control\" placeholder=\"Quantity\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>CandleCount</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.candleCount\" class=\"form-control\" placeholder=\"CandleCount\">\n    </div>\n\n\n\n    <div class=\"form-group\">\n      <label>StopLossPercentage</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.stockWatch.stopLossPercentage\" class=\"form-control\" placeholder=\"Stop Loss Percentage\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Target Profit Percentage</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.stockWatch.profitPercentage\" class=\"form-control\" placeholder=\"Target Profit Percentage\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Profit or Loss</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.profitOrLoss\" class=\"form-control\" placeholder=\"Profit Or Loss\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Profit or Loss Percentage</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.profitPercentage\" class=\"form-control\" placeholder=\"Profit Or Loss Percentage\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>EntryConditions</label>\n      <br>\n        <textarea rows = \"15\" cols = \"80\" [(ngModel)]=\"backTestStrategy.backTestRequest.tradeStrategy.entryConditions\"  placeholder=\"Entry Condition\">\n          Enter entry condition here\n        </textarea>\n      <br>\n    </div>\n\n    <div class=\"form-group\">\n      <label>EntrySignal</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.tradeStrategy.entrySignal\" class=\"form-control\" placeholder=\"Entry Signal\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>ExitConditions</label>\n      <br>\n        <textarea rows = \"15\" cols = \"80\" [(ngModel)]=\"backTestStrategy.backTestRequest.tradeStrategy.exitConditions\" placeholder=\"Exit Condition\">\n          Enter exit condition here\n        </textarea>\n      <br>\n    </div>\n\n    <div class=\"form-group\">\n      <label>ExitSignal</label>\n      <input type=\"text\" [(ngModel)]=\"backTestStrategy.backTestRequest.tradeStrategy.exitSignal\" class=\"form-control\" placeholder=\"Exit Signal\">\n    </div>\n\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"getBackTestStrategy()\">fetch</button>\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"!loading\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"executeBackTestStrategy()\">Execute Back Test</button>\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"!loading\">\n      <span class=\"btn btn-success btn-lg btn-block\" [routerLink]=\"['/trade-strategy-edit']\"  [queryParams]=\"{ strategyName: backTestStrategy.backTestRequest.strategyName }\">Deploy Back Test</span>\n    </div>\n\n    <div class=\"app-loading\" *ngIf=\"loading\">\n      <div class=\"logo\"></div>\n     <svg class=\"spinner\" viewBox=\"25 25 50 50\">\n       <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\n     </svg>\n   </div>\n\n\n    <div class=\"form-group\">\n    <button (click)=\"downloadCSV()\"> Download Trades </button>\n    </div>\n    <div echarts [options]=\"initialValue\" [merge]= \"dynamicData\" class=\"demo-chart\"></div>\n  </div>\n</div>\n","import { BackTestTrade } from './backTestTrade';\n\nexport class BackTestResponse {\n  profitPercentage : number;\n  profitOrLoss : number;\n  trades : Array<BackTestTrade>;\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CSVUtil {\n\n    downloadFile(data, filename, headerList) {\n        let csvData = this.ConvertToCSV(data, headerList);\n        console.log(csvData)\n        let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n        let dwldLink = document.createElement(\"a\");\n        let url = URL.createObjectURL(blob);\n        let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n        if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n            dwldLink.setAttribute(\"target\", \"_blank\");\n        }\n        dwldLink.setAttribute(\"href\", url);\n        dwldLink.setAttribute(\"download\", filename + \".csv\");\n        dwldLink.style.visibility = \"hidden\";\n        document.body.appendChild(dwldLink);\n        dwldLink.click();\n        document.body.removeChild(dwldLink);\n    }\n\n    ConvertToCSV(objArray, headerList) {\n        let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n        let str = '';\n        let row = 'S.No,';\n        for (let index in headerList) {\n            row += headerList[index] + ',';\n        }\n        row = row.slice(0, -1);\n        str += row + '\\r\\n';\n        for (let i = 0; i < array.length; i++) {\n            let line = (i + 1) + '';\n            for (let index in headerList) {\n                let head = headerList[index];\n                line += ',' + array[i][head];\n            }\n            str += line + '\\r\\n';\n        }\n        return str;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { StockTradeStrategy } from './stockTradeStrategy';\nimport { BackTestStrategy } from './backTestStrategy';\nimport { BackTestRequest } from './backTestRequest';\nimport { BackTestResponse } from './backTestResponse';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestApiService {\n\n  // Define API\n  apiURL = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  getAllStockTradeStrategy (): Observable<StockTradeStrategy[]> {\n    return this.http.get<StockTradeStrategy[]>(this.apiURL + '/alpaca/strategy/getAllStrategy')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  };\n\n  getAllBackTestStrategy (): Observable<BackTestStrategy[]> {\n    return this.http.get<BackTestStrategy[]>(this.apiURL + '/alpaca/backtest/getAllBackTest')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  };\n\n  getStockTradeStrategy(ticker): Observable<StockTradeStrategy> {\n    return this.http.get<StockTradeStrategy>(this.apiURL + '/alpaca/strategy/getStrategy?ticker=' + ticker)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  getBackTestStrategy(strategyName): Observable<BackTestStrategy> {\n    return this.http.get<BackTestStrategy>(this.apiURL + '/alpaca/backtest/getBackTest?strategyName=' + strategyName)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  saveStockTradeStrategy(stockTradeStrategy): Observable<StockTradeStrategy> {\n    return this.http.post<StockTradeStrategy>(this.apiURL + '/alpaca/strategy/updateStrategy', JSON.stringify(stockTradeStrategy), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  executeBackTestStrategy(backTestRequest): Observable<BackTestResponse> {\n    return this.http.post<BackTestResponse>(this.apiURL + '/alpaca/backtest/execute', JSON.stringify(backTestRequest), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n\n  deleteStockTradeStrategy(ticker) : Observable<any> {\n    return this.http.delete<any>(this.apiURL + '/alpaca/strategy/removeStrategy?ticker=' + ticker)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  deleteBackTestStrategy(strategyName) : Observable<any> {\n    return this.http.delete<any>(this.apiURL + '/alpaca/backtest/remove?strategyName=' + strategyName)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error) {\n     let errorMessage = '';\n     if(error.status == 0 || error.status == 200) {\n       return;\n     }\n     if(error.error instanceof ErrorEvent) {\n       // Get client-side error\n       errorMessage = error.error.message;\n     } else {\n       // Get server-side error\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n     }\n     window.alert(errorMessage);\n    return throwError(errorMessage);\n  //  return errorMessage;\n  }\n\n}\n","import { TradeStrategy } from './tradeStrategy';\nimport { StockWatch } from './stockWatch';\n\nexport class StockTradeStrategy {\n\n   ticker: string;\n   quantity: number;\n   interval: number;\n   timeUnit: string;\n   intervalDuration: string;\n   tradeStrategy: TradeStrategy;\n   state: string;\n   stockWatch: StockWatch;\n   candleCount: number;\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { StockTradeStrategy } from '../shared/stockTradeStrategy';\n\n\n@Component({\n  selector: 'app-employees-list',\n  templateUrl: './trade-strategy-browse.component.html',\n  styleUrls: ['./trade-strategy-browse.component.css']\n})\nexport class TradeStrategyBrowseComponent implements OnInit {\n\n  stockTradeStrategies: StockTradeStrategy[] = [];\n\n  constructor(public restApi: RestApiService) { }\n\n\n\n  // Get AllStockStrategy list\n  loadAllStockStrategy() {\n    this.restApi.getAllStockTradeStrategy().subscribe((data : StockTradeStrategy[]) => {\n      this.stockTradeStrategies = data ;\n    }\n    );\n\n\n\n//      {next : stockTradeStrategies => {\n//      this.stockTradeStrategies = stockTradeStrategies;\n//    }\n//  });\n};\n\n  ngOnInit() :void  {\n    this.loadAllStockStrategy();\n  }\n\ndeleteStockStrategy(id) {\n   if (window.confirm('Are you sure, you want to delete?')){\n   this.restApi.deleteStockTradeStrategy(id).subscribe(data => {\n     this.loadAllStockStrategy()\n   })\n   }\n }\n\n}\n","<div class=\"container custom-container-2\">\n\n  <!-- Show it when there is no employee -->\n  <div class=\"no-data text-center\">\n    <p>Click here to add more Stock Trade Strategy</p>\n    <button class=\"btn btn-outline-primary\" routerLink=\"trade-strategy-edit\">Add Stock Trade Strategy</button>\n  </div>\n\n  <!-- Employees list table, it hides when there is no employee -->\n  <div *ngIf=\"stockTradeStrategies.length !== 0\">\n    <h3 class=\"mb-3 text-center\">Browse Stock Trade Strategy</h3>\n\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Ticker</th>\n            <th scope=\"col\">Interval</th>\n            <th scope=\"col\">IntervalDuration</th>\n            <th scope=\"col\">TimeUnit</th>\n            <th scope=\"col\">State</th>\n            <th scope=\"col\">CandleCount</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let stockTradeStrategy of stockTradeStrategies\">\n            <td>{{stockTradeStrategy.ticker}}</td>\n            <td>{{stockTradeStrategy.interval}}</td>\n            <td>{{stockTradeStrategy.intervalDuration}}</td>\n            <td>{{stockTradeStrategy.timeUnit}}</td>\n            <td>{{stockTradeStrategy.state}}</td>\n            <td>{{stockTradeStrategy.candleCount}}</td>\n            <td>\n              <span class=\"edit\"\n                [routerLink]=\"['/trade-strategy-edit']\"  [queryParams]=\"{ ticker: stockTradeStrategy.ticker}\">Edit</span>\n              <!-- routerLink=\"trade-strategy-edit/{{stockTradeStrategy.ticker}}\">Edit</span> -->\n              <span class=\"delete\" (click)=\"deleteStockStrategy(stockTradeStrategy.ticker)\">Delete</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StockTradeStrategy } from \"../shared/stockTradeStrategy\";\nimport { TradeStrategy } from \"../shared/tradeStrategy\";\n\n@Component({\n  selector: 'trade-strategy-edit',\n  templateUrl: './trade-strategy-edit.component.html',\n  styleUrls: ['./trade-strategy-edit.component.css']\n})\n\nexport class TradeStrategyEditComponent implements OnInit {\n//  ticker = this.actRoute.snapshot.params['ticker'];\n  ticker : string;\n  strategyName : string;\n  stockTradeStrategy: any = {\n      \"ticker\": \"Enter your Ticker\",\n      \"quantity\": 10,\n      \"interval\": 1,\n      \"timeUnit\": \"MINUTES\",\n      \"intervalDuration\": \"ONE_MIN\",\n      \"tradeStrategy\":{\n      \"entryConditions\": \"function(barSeries, stockWatch){ \\n\\tclosePriceIndicator = new ClosePriceIndicator(barSeries);\\n\\tif(closePriceIndicator.getValue(barSeries.getEndIndex()).floatValue() < 568){\\n\\t\\tstockWatch.setStopLossPercentage(10.0);\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n};\",\n      \"entrySignal\": \"buy\",\n      \"exitSignal\": \"sell\",\n      \"exitConditions\": \"function(barSeries, stockWatch){ \\n\\tclosePriceIndicator = new ClosePriceIndicator(barSeries);\\n\\tif(closePriceIndicator.getValue(barSeries.getEndIndex()).floatValue() > 569){\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n};\"\n      },\n      \"state\": \"WATCHING\",\n      \"stockWatch\":{\n      \"stopLossPercentage\": 5.0,\n      \"profitPercentage\": 20.0,\n      \"reenter\" : true\n      },\n      \"candleCount\": 1000\n    };\n  reEnterOptions : string[] = [\"true\",\"false\"];\n  intervalDurationOptions : string[] = [\"ONE_MIN\",\"FIVE_MINUTE\",\"FIFTEEN_MINUTE\",\"ONE_DAY\"];\n  tradeStrategyStates : string[] = [\"INACTIVE\",\"WATCHING\",\"ENTRY_ORDER_PENDING\",\"EXIT_ORDER_PENDING\",\"ENTERED\",\"COMPLETED\"];\n  timeUnit : string[] = [\"DAYS\",\"MINUTES\",\"HOURS\"];\n  loading : boolean = false;\n\n\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) {\n    this.actRoute.queryParams.subscribe( params => {\n      console.log(params);\n      this.ticker = params[\"ticker\"];\n      this.strategyName = params[\"strategyName\"];\n       }\n    );\n\n  }\n\n  ngOnInit() {\n    this.getStockTradeStrategyFromParam();\n   }\n\n  getStockTradeStrategyFromParam() {\n    if(this.ticker != null) {\n      this.restApi.getStockTradeStrategy(this.ticker).subscribe(data => {\n        this.stockTradeStrategy = data;\n      })\n    } else {\n      this.restApi.getBackTestStrategy(this.strategyName).subscribe(data => {\n        let backTestStrategy = data;\n        this.stockTradeStrategy = new StockTradeStrategy();\n        this.stockTradeStrategy.ticker = backTestStrategy.backTestRequest.ticker;\n        this.stockTradeStrategy.quantity = backTestStrategy.backTestRequest.quantity;\n        this.stockTradeStrategy.interval = 1;\n        this.stockTradeStrategy.intervalDuration = backTestStrategy.backTestRequest.intervalDuration;\n        this.stockTradeStrategy.state = \"WATCHING\";\n        this.stockTradeStrategy.candleCount=backTestStrategy.backTestRequest.candleCount;\n        this.stockTradeStrategy.tradeStrategy = backTestStrategy.backTestRequest.tradeStrategy;\n        this.stockTradeStrategy.stockWatch = backTestStrategy.backTestRequest.stockWatch;\n        this.stockTradeStrategy.stockWatch.reenter = true;\n      })\n    }\n  }\n\n\n  getStockTradeStrategy() {\n    this.restApi.getStockTradeStrategy(this.stockTradeStrategy.ticker).subscribe(data => {\n      this.stockTradeStrategy = data;\n    })\n  }\n\n  // Update employee data\n  saveStockTradeStrategy() {\n    if(window.confirm('Are you sure, you want to save?')){\n      this.loading = true;\n      this.restApi.saveStockTradeStrategy(this.stockTradeStrategy).subscribe(data => {\n        this.stockTradeStrategy = data;\n        this.loading = false;\n      });\n    }\n  }\n\n\n}\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n\n    <h3 class=\"mb-3 text-center\">Update Trade Strategy</h3>\n\n    <div class=\"form-group\">\n      <label>Ticker</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.ticker\" class=\"form-control\" placeholder=\"Ticker\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Quantity</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.quantity\" class=\"form-control\" placeholder=\"Quantity\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>Interval</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.interval\" class=\"form-control\" placeholder=\"Interval\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>TimeUnit</label>\n      <select [(ngModel)]=\"stockTradeStrategy.timeUnit\" class=\"form-control\">\n        <option *ngFor=\"let option of timeUnit\">\n          {{option}}\n        </option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label>IntervalDuration</label>\n      <select [(ngModel)]=\"stockTradeStrategy.intervalDuration\" class=\"form-control\">\n        <option *ngFor=\"let option of intervalDurationOptions\">\n          {{option}}\n        </option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label>State</label>\n      <select [(ngModel)]=\"stockTradeStrategy.state\" class=\"form-control\">\n        <option *ngFor=\"let option of tradeStrategyStates\">\n          {{option}}\n        </option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label>CandleCount</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.candleCount\" class=\"form-control\" placeholder=\"Candle Count\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>StopLossPercentage</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.stockWatch.stopLossPercentage\" class=\"form-control\" placeholder=\"Stop Loss Percentage\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>profitPercentage</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.stockWatch.profitPercentage\" class=\"form-control\" placeholder=\"Profit Percentage\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>ReEnter?</label>\n      <select [(ngModel)]=\"stockTradeStrategy.stockWatch.reenter\" class=\"form-control\">\n        <option *ngFor=\"let option of reEnterOptions\">\n          {{option}}\n        </option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label>EntryConditions</label>\n      <br>\n        <textarea rows = \"15\" cols = \"80\" [(ngModel)]=\"stockTradeStrategy.tradeStrategy.entryConditions\"  placeholder=\"Entry Condition\">\n          Enter entry condition here\n        </textarea>\n      <br>\n    </div>\n\n    <div class=\"form-group\">\n      <label>EntrySignal</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.tradeStrategy.entrySignal\" class=\"form-control\" placeholder=\"Entry Signal\">\n    </div>\n\n    <div class=\"form-group\">\n      <label>ExitConditions</label>\n      <br>\n        <textarea rows = \"15\" cols = \"80\" [(ngModel)]=\"stockTradeStrategy.tradeStrategy.exitConditions\" placeholder=\"Exit Condition\">\n          Enter exit condition here\n        </textarea>\n      <br>\n    </div>\n\n    <div class=\"form-group\">\n      <label>ExitSignal</label>\n      <input type=\"text\" [(ngModel)]=\"stockTradeStrategy.tradeStrategy.exitSignal\" class=\"form-control\" placeholder=\"Exit Signal\">\n    </div>\n\n    <div class=\"app-loading\" *ngIf=\"loading\">\n      <div class=\"logo\"></div>\n     <svg class=\"spinner\" viewBox=\"25 25 50 50\">\n       <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\n     </svg>\n   </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"getStockTradeStrategy()\">fetch</button>\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"saveStockTradeStrategy()\">Update</button>\n    </div>\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}