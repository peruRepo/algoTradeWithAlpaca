{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/rest-api.service.ts","webpack:///./src/app/trade-strategy-browse/trade-strategy-browse.component.css","webpack:///./src/app/trade-strategy-browse/trade-strategy-browse.component.html","webpack:///./src/app/trade-strategy-browse/trade-strategy-browse.component.ts","webpack:///./src/app/trade-strategy-edit/trade-strategy-edit.component.css","webpack:///./src/app/trade-strategy-edit/trade-strategy-edit.component.html","webpack:///./src/app/trade-strategy-edit/trade-strategy-edit.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TradeStrategyEditComponent } from './trade-strategy-edit/trade-strategy-edit.component';\nimport { TradeStrategyBrowseComponent } from './trade-strategy-browse/trade-strategy-browse.component';\n\nconst routes: Routes = [\n  { path: '', component: TradeStrategyBrowseComponent },\n  { path: 'trade-strategy-edit', component: TradeStrategyEditComponent },\n  { path: 'trade-strategy-edit/:ticker', component: TradeStrategyEditComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\\\">\\n  <h5 class=\\\"my-0 mr-md-auto font-weight-normal\\\">Alpca Trade TradeStrategy Management</h5>\\n  <nav class=\\\"my-2 my-md-0 mr-md-3\\\">\\n    <a class=\\\"btn btn-outline-primary\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/trade-strategy-edit\\\">Trade Strategy Edit</a>\\n  </nav>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'alpca-tradeStrategy-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\n// HttpClient module for RESTful API\nimport { HttpClientModule } from '@angular/common/http';\n\n// Routing module for router service\nimport { AppRoutingModule } from './app-routing.module';\n\n// Forms module\nimport { FormsModule } from '@angular/forms';\n\n// Components\nimport { TradeStrategyEditComponent } from './trade-strategy-edit/trade-strategy-edit.component';\nimport { TradeStrategyBrowseComponent } from './trade-strategy-browse/trade-strategy-browse.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TradeStrategyEditComponent,\n    TradeStrategyBrowseComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { StockTradeStrategy } from './stockTradeStrategy';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestApiService {\n\n  // Define API\n  apiURL = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  // HttpClient API get() method => Fetch employees list\n  getAllStockTradeStrategy (): Observable<StockTradeStrategy[]> {\n    return this.http.get<StockTradeStrategy[]>(this.apiURL + '/alpaca/strategy/getAllStrategy')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  };\n\n  // HttpClient API get() method => Fetch StockTradeStrategy\n  getStockTradeStrategy(ticker): Observable<StockTradeStrategy> {\n    return this.http.get<StockTradeStrategy>(this.apiURL + '/alpaca/strategy/getStrategy?ticker=' + ticker)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API post() method => Create StockTradeStrategy\n  saveStockTradeStrategy(stockTradeStrategy): Observable<StockTradeStrategy> {\n    return this.http.post<StockTradeStrategy>(this.apiURL + '/alpaca/strategy/updateStrategy', JSON.stringify(stockTradeStrategy), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API delete() method => Delete StockTradeStrategy\n  deleteStockTradeStrategy(ticker){\n    return this.http.delete<StockTradeStrategy>(this.apiURL + '/alpaca/strategy/removeStrategy' + ticker)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // Error handling\n  handleError(error) {\n     let errorMessage = '';\n     if(error.error instanceof ErrorEvent) {\n       // Get client-side error\n       errorMessage = error.error.message;\n     } else {\n       // Get server-side error\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n     }\n     window.alert(errorMessage);\n     return throwError(errorMessage);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWRlLXN0cmF0ZWd5LWJyb3dzZS90cmFkZS1zdHJhdGVneS1icm93c2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container custom-container-2\\\">\\n\\n  <!-- Show it when there is no employee -->\\n  <div class=\\\"no-data text-center\\\">\\n    <p>Click here to add more Stock Trade Strategy</p>\\n    <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"trade-strategy-edit\\\">Add Stock Trade Strategy</button>\\n  </div>\\n\\n  <!-- Employees list table, it hides when there is no employee -->\\n  <div *ngIf=\\\"stockTradeStrategies.length !== 0\\\">\\n    <h3 class=\\\"mb-3 text-center\\\">Browse Stock Trade Strategy</h3>\\n\\n    <div class=\\\"col-md-12\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Ticker</th>\\n            <th scope=\\\"col\\\">Interval</th>\\n            <th scope=\\\"col\\\">IntervalDuration</th>\\n            <th scope=\\\"col\\\">TimeUnit</th>\\n            <th scope=\\\"col\\\">State</th>\\n            <th scope=\\\"col\\\">CandleCount</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let stockTradeStrategy of stockTradeStrategies\\\">\\n            <td>{{stockTradeStrategy.ticker}}</td>\\n            <td>{{stockTradeStrategy.interval}}</td>\\n            <td>{{stockTradeStrategy.intervalDuration}}</td>\\n            <td>{{stockTradeStrategy.timeUnit}}</td>\\n            <td>{{stockTradeStrategy.state}}</td>\\n            <td>{{stockTradeStrategy.candleCount}}</td>\\n            <td>\\n              <span class=\\\"edit\\\" routerLink=\\\"trade-strategy-edit/{{stockTradeStrategy.ticker}}\\\">Edit</span>\\n              <span class=\\\"delete\\\" (click)=\\\"deleteStockStrategy(stockTradeStrategy.ticker)\\\">Delete</span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { StockTradeStrategy } from '../shared/stockTradeStrategy';\n\n\n@Component({\n  selector: 'app-employees-list',\n  templateUrl: './trade-strategy-browse.component.html',\n  styleUrls: ['./trade-strategy-browse.component.css']\n})\nexport class TradeStrategyBrowseComponent implements OnInit {\n\n  stockTradeStrategies: StockTradeStrategy[] = [];\n\n  constructor(public restApi: RestApiService) { }\n\n\n\n  // Get AllStockStrategy list\n  loadAllStockStrategy() {\n    this.restApi.getAllStockTradeStrategy().subscribe((data : StockTradeStrategy[]) => {\n      this.stockTradeStrategies = data ;\n    }\n    );\n\n\n\n//      {next : stockTradeStrategies => {\n//      this.stockTradeStrategies = stockTradeStrategies;\n//    }\n//  });\n};\n\n  ngOnInit() :void  {\n    this.loadAllStockStrategy();\n  }\n  // Delete employee\n//  deleteStockStrategy(id) {\n//    if (window.confirm('Are you sure, you want to delete?')){\n//      this.restApi.deleteStockTradeStrategy(id).subscribe(data => {\n//        this.loadAllStockStrategy()\n//      })\n//    }\n//  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWRlLXN0cmF0ZWd5LWVkaXQvdHJhZGUtc3RyYXRlZ3ktZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container custom-container\\\">\\n  <div class=\\\"col-md-12\\\">\\n\\n    <h3 class=\\\"mb-3 text-center\\\">Update Trade Strategy</h3>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Ticker</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.ticker\\\" class=\\\"form-control\\\" placeholder=\\\"Ticker\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Quantity</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.quantity\\\" class=\\\"form-control\\\" placeholder=\\\"Quantity\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Interval</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.interval\\\" class=\\\"form-control\\\" placeholder=\\\"Interval\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>IntervalDuration</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.intervalDuration\\\" class=\\\"form-control\\\" placeholder=\\\"IntervalDuration\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>State</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.state\\\" class=\\\"form-control\\\" placeholder=\\\"State\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>CandleCount</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.candleCount\\\" class=\\\"form-control\\\" placeholder=\\\"Candle Count\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>StopLossPercentage</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.stockWatch.stopLossPercentage\\\" class=\\\"form-control\\\" placeholder=\\\"Stop Loss Percentage\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>profitPercentage</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.stockWatch.profitPercentage\\\" class=\\\"form-control\\\" placeholder=\\\"Profit Percentage\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>EntryConditions</label>\\n      <br>\\n        <textarea rows = \\\"15\\\" cols = \\\"80\\\" [(ngModel)]=\\\"stockTradeStrategy.tradeStrategy.entryConditions\\\"  placeholder=\\\"Entry Condition\\\">\\n          Enter entry condition here\\n        </textarea>\\n      <br>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>EntrySignal</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.tradeStrategy.entrySignal\\\" class=\\\"form-control\\\" placeholder=\\\"Entry Signal\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>ExitConditions</label>\\n      <br>\\n        <textarea rows = \\\"15\\\" cols = \\\"80\\\" [(ngModel)]=\\\"stockTradeStrategy.tradeStrategy.exitConditions\\\" placeholder=\\\"Exit Condition\\\">\\n          Enter exit condition here\\n        </textarea>\\n      <br>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>ExitSignal</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"stockTradeStrategy.tradeStrategy.exitSignal\\\" class=\\\"form-control\\\" placeholder=\\\"Exit Signal\\\">\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" (click)=\\\"getStockTradeStrategy()\\\">fetch</button>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" (click)=\\\"saveStockTradeStrategy()\\\">Update</button>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'trade-strategy-edit',\n  templateUrl: './trade-strategy-edit.component.html',\n  styleUrls: ['./trade-strategy-edit.component.css']\n})\n\nexport class TradeStrategyEditComponent implements OnInit {\n  ticker = this.actRoute.snapshot.params['ticker'];\n  stockTradeStrategy: any = {};\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) {\n    this.actRoute.params.subscribe( params => {\n      console.log(params);\n      this.ticker = params[\"ticker\"];\n       }\n    );\n  }\n\n  ngOnInit() {\n    this.getStockTradeStrategyWithParam();\n   }\n\n  getStockTradeStrategyWithParam() {\n    this.restApi.getStockTradeStrategy(this.ticker).subscribe(data => {\n      this.stockTradeStrategy = data;\n    })\n  }\n\n\n  getStockTradeStrategy() {\n    this.restApi.getStockTradeStrategy(this.stockTradeStrategy.ticker).subscribe(data => {\n      this.stockTradeStrategy = data;\n    })\n  }\n\n  // Update employee data\n  saveStockTradeStrategy() {\n    if(window.confirm('Are you sure, you want to save?')){\n      this.restApi.saveStockTradeStrategy(this.stockTradeStrategy).subscribe(data => {\n        this.stockTradeStrategy = data;\n      })\n    }\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}